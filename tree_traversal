#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define fr(i,n) for(ll i=0;i<n;i++)
#define vl vector<ll>
#define vll vector<ll,ll>
#define vpl vector< pair<ll,ll> >
#define pb push_back
#define ft first
#define sd second
#define bn begin()
#define ed end()
// Author gyanendra singh panwar :

class tree
{
	public:
	int v;
	vector<int> *vect;
	
	tree(int vertex)
	{
		v = vertex ;
		vect = new vector<int>[v+1];
	}
	
	void addedge(int l, int r)
	{
		vect[l].pb(r);
	}
	
	void inorder(int u)
	{
		if(vect[u].empty())
		{
			cout<<u<<" ";
			return;
		}
		
		
		inorder(vect[u][0]);
		cout<<u<<" ";
		inorder(vect[u][1]);
	}
	
	void postorder(int u)
	{
		if(vect[u].empty())
		{
			cout<<u<<" ";
			return;
		}
		
		
		postorder(vect[u][0]);
		postorder(vect[u][1]);
		cout<<u<<" ";
	}
	
	void preorder(int u)
	{
		if(vect[u].empty())
		{
			cout<<u<<" ";
			return;
		}
		
		cout<<u<<" ";
		preorder(vect[u][0]);
		preorder(vect[u][1]);
	}
};

int main()
{
	int vertex,l,r;
	cin>>vertex;
	
	tree g(vertex);
	int q;
	cin>>q;
	while(q--)
	{
		cin>>l>>r;
		g.addedge(l,r);
		
//		cout<<" to exit 0 else enter 1\n";
//		cin>>q;
	}
	cout<<"inorder ";
	g.inorder(1);
	
	cout<<"\npostorder ";
	g.postorder(1);
	
	cout<<"\npreorder ";
	g.preorder(1);
}

//9
//8
//1 2
//1 3
//2 4
//2 5
//3 6
//3 7
//4 8
//4 9
//inorder 8 4 9 2 5 1 6 3 7
//postorder 8 9 4 5 2 6 7 3 1
//preorder 1 2 4 8 9 5 3 6 7

